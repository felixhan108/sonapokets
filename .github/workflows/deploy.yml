# GitHub Actions 워크플로우의 이름을 정의
name: Deploy sonapokets

# 워크플로우 트리거 조건 설정
on:
  push:
    branches: [master] # master 브랜치에 push될 때 실행
  pull_request:
    branches: [master] # master 브랜치로의 PR이 생성될 때 실행
  workflow_dispatch: # 수동으로 워크플로우 실행 가능

jobs:
  # 서버 접속 및 코드 업데이트를 위한 준비 작업
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Pull latest code
        run: |
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "cd ~/github/sonapokets && git pull"

  # Nginx 서비스 배포 작업
  deploy_nginx:
    needs: prepare # prepare 작업이 완료된 후 실행
    runs-on: ubuntu-latest # Ubuntu 최신 버전에서 실행
    steps:
      # SSH 키 설정
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 서버 호스트키 등록
      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Nginx 서비스 시작
      - name: Start Nginx service
        run: |
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "cd ~/github/sonapokets && docker-compose up -d nginx"

      # Nginx 시작 대기
      - name: Wait for Nginx to start
        run: |
          echo "Waiting for Nginx to start..."
          sleep 10

  deploy_photoprism:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Start PhotoPrism service
        run: |
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "cd ~/github/sonapokets && docker-compose up -d photoprism"

      - name: Wait for PhotoPrism to start
        run: |
          echo "Waiting for PhotoPrism to start..."
          sleep 30

  deploy_frontend:
    needs: [deploy_nginx, deploy_photoprism]
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Build and start Frontend service
        run: |
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "cd ~/github/sonapokets && docker-compose build frontend --build-arg CACHEBUST=$(date +%s) && docker-compose up -d frontend"

      - name: Wait for Frontend to start
        run: |
          echo "Waiting for Frontend to start..."
          sleep 10

  finalize:
    needs: deploy_frontend
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Restart Nginx to ensure proper connectivity
        run: |
          ssh ${{ secrets.USER_NAME }}@${{ secrets.SERVER_IP }} "cd ~/github/sonapokets && docker-compose restart nginx"

      - name: Deployment completed
        run: |
          echo "Deployment completed successfully!"
