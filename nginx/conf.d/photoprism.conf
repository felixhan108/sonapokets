# nginx.conf에 추가하거나 설정 파일 상단에 추가
server_tokens off;

# HTTP 서버 설정 - HTTP를 HTTPS로 리다이렉트
server {
    listen 80;                     # 80 포트(HTTP) 리스닝
    server_name sonapokets.day;    # 서버 도메인 이름

    location / {
        return 301 https://$host$request_uri;    # 모든 HTTP 요청을 HTTPS로 리다이렉트
    }
}

# HTTPS 서버 설정
server {
    listen 443 ssl;                # 443 포트(HTTPS)에서 SSL 활성화하여 리스닝
    server_name sonapokets.day;    # 서버 도메인 이름

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/sonapokets.day/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sonapokets.day/privkey.pem;

    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;                  # 사용할 SSL/TLS 프로토콜 버전
    ssl_prefer_server_ciphers on;                   # 서버측 암호화 방식 우선 사용
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;    # 사용할 암호화 알고리즘

     # 보안 헤더 추가
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 프록시 설정 - Photoprism 서버로 요청 전달
    location /admin {
        proxy_pass http://photoprism:2342;          # Photoprism 컨테이너로 프록시
        proxy_set_header Host $host;                # 원본 호스트 헤더 전달
        proxy_set_header X-Real-IP $remote_addr;    # 실제 클라이언트 IP 전달
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # 프록시 서버 경유 정보 전달
        proxy_set_header X-Forwarded-Proto $scheme; # 원본 프로토콜 정보 전달

 
    }

    # PhotoPrism API 문서를 위한 프록시 설정
    location /api/v1/ {
        # PhotoPrism API로 프록시
        proxy_pass http://photoprism:2342/admin/api/v1/;

        # 프록시 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS 설정
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        


    }

    # 프론트엔드 애플리케이션으로의 프록시 설정
    location / {
     # Next.js 프론트엔드 서버로 요청을 전달
     proxy_pass http://frontend:3000;
     # 원본 호스트 정보 전달
     proxy_set_header Host $host;
     # 실제 클라이언트 IP 주소 전달
     proxy_set_header X-Real-IP $remote_addr;
     # 프록시 서버를 거치며 추가된 클라이언트 IP 정보 전달
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     # 사용된 프로토콜(http/https) 정보 전달
     proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 백엔드 서버로의 프록시 설정
    location /java/v1 {
        proxy_pass http://backend:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 올라마 서버로의 프록시 설정
    location /ollama {
        proxy_pass http://ollama:11434;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}