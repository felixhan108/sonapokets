# nginx.conf에 추가하거나 설정 파일 상단에 추가
server_tokens off;

# HTTP 서버 설정 - HTTP를 HTTPS로 리다이렉트
server {
    listen 80;                     # 80 포트(HTTP) 리스닝
    server_name sonapokets.day;    # 서버 도메인 이름

    location / {
        return 301 https://$host$request_uri;    # 모든 HTTP 요청을 HTTPS로 리다이렉트
    }
}

# HTTPS 서버 설정
server {
    listen 443 ssl;                # 443 포트(HTTPS)에서 SSL 활성화하여 리스닝
    server_name sonapokets.day;    # 서버 도메인 이름

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/sonapokets.day/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sonapokets.day/privkey.pem;

    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;                  # 사용할 SSL/TLS 프로토콜 버전
    ssl_prefer_server_ciphers on;                   # 서버측 암호화 방식 우선 사용
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;    # 사용할 암호화 알고리즘

     # 보안 헤더 추가
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 프록시 설정 - Photoprism 서버로 요청 전달
    location / {
        proxy_pass http://photoprism:2342;          # Photoprism 컨테이너로 프록시
        proxy_set_header Host $host;                # 원본 호스트 헤더 전달
        proxy_set_header X-Real-IP $remote_addr;    # 실제 클라이언트 IP 전달
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # 프록시 서버 경유 정보 전달
        proxy_set_header X-Forwarded-Proto $scheme; # 원본 프로토콜 정보 전달
         # 웹소켓 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Swagger UI를 위한 설정 추가
    location /swagger/ {
        proxy_pass http://swagger-ui:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 설정 추가
        # 모든 도메인에서의 API 접근 허용
        add_header 'Access-Control-Allow-Origin' '*';
        # 허용할 HTTP 메서드 지정
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        # 허용할 HTTP 헤더 지정
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        
        # OPTIONS 메서드 요청(프리플라이트)에 대한 처리
        if ($request_method = 'OPTIONS') {
            # CORS 헤더 설정
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            # 프리플라이트 응답 캐시 시간 설정 (20일)
            add_header 'Access-Control-Max-Age' 1728000;
            # 응답 컨텐츠 타입 설정
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            # 204 No Content 응답 반환
            return 204;
        }
    }


    # PhotoPrism API 문서를 위한 프록시 설정
    location /api/v1/ {
        # PhotoPrism API로 프록시
        proxy_pass http://photoprism:2342/api/v1/;
        # 프록시 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS 설정
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    }
}